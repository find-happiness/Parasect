/**
 * Name： com.uniview
 * Copyright： (c) 2015, Uniview Tech, RD IMOS. All rights reserved.
 */
package com.uniview;

import org.apache.commons.io.FileUtils;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

/**
 * Description :
 *
 * @author T02452 on 4/21/2016.
 */
public class Parasect {

    // key my package com.****.[****].parasect
    private static final String KEY_PACKAGE = "parasect";

    // execute thrift.exe *.thrift will generate gen-java/{package name}/***.java
    private static final String PREFIX = "gen-java/";

    // namespace java com.****.*****
    private static final String KEYWORD_PACKAGE = "namespace java";

    // thrift service keyword
    private static final String KEYWORD_SERVICE = "service";

    // suffix java code file
    private static final String SUFFIX_JAVA = ".java";

    public static void main(String[] args) throws Exception {

        if (null == args || 0 == args.length) {
            throw new Exception("bad args!!!");
        }
        String thriftFilePath = args[0];
        List<String> pckList = new ArrayList<>();
        List<String> serviceList = new ArrayList<>();
        FileUtils.readLines(new File(thriftFilePath))
                .stream().forEach(str -> {
                    str = str.replace("\t", "").trim();
                    if (str.startsWith(KEYWORD_PACKAGE)) {
                        pckList.add(str.split(" ")[2]);
                    }
                    if (str.startsWith(KEYWORD_SERVICE)) {
                        String[] arrStr = str.split(" ");
                        if (arrStr.length > 1) {
                            serviceList.add(arrStr[1].replace("{",""));
                        }
                    }
                }
        );
        String thriftPkg = pckList.get(0);
        File thriftDir = new File(FH.s(PREFIX + thriftPkg.replace(".", "/")));
        File parasectDir = new File(thriftDir.getParent(), KEY_PACKAGE);
        if (!parasectDir.exists() && !parasectDir.mkdir()) {
            throw new Exception("can't mk dir : " + parasectDir.getAbsolutePath());
        }
        FileUtils.cleanDirectory(parasectDir);
        String parasectPkgName = thriftPkg.substring(0, thriftPkg.lastIndexOf('.') + 1) + KEY_PACKAGE;

        // generate RxThrift.java based on ****.thrift
        RxThrift.generateRxThrift(serviceList, parasectDir, parasectPkgName, thriftPkg);

        // generate Rx{service}.java based on {package}/{service}.java (generated by thrift.exe)
        for (String str : serviceList) {
            RxClient.generate(new File(thriftDir, str + SUFFIX_JAVA), thriftPkg, parasectPkgName, parasectDir);
        }
    }
}
